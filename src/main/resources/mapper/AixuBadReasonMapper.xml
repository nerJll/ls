<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.aixu.dao.AixuBadReasonMapper" >
  <resultMap id="BaseResultMap" type="com.aixu.bean.AixuBadReason" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="desc" property="desc" jdbcType="VARCHAR" />
    <result column="parentid" property="parentid" jdbcType="INTEGER" />
    <result column="res_one" property="resOne" jdbcType="VARCHAR" />
    <result column="res_two" property="resTwo" jdbcType="VARCHAR" />
    <result column="res_three" property="resThree" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, desc, parentid, res_one, res_two, res_three
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.aixu.bean.AixuBadReasonExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from aixu_bad_reason
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from aixu_bad_reason
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from aixu_bad_reason
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.aixu.bean.AixuBadReasonExample" >
    delete from aixu_bad_reason
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.aixu.bean.AixuBadReason" >
    insert into aixu_bad_reason (id, desc, parentid, 
      res_one, res_two, res_three
      )
    values (#{id,jdbcType=INTEGER}, #{desc,jdbcType=VARCHAR}, #{parentid,jdbcType=INTEGER}, 
      #{resOne,jdbcType=VARCHAR}, #{resTwo,jdbcType=VARCHAR}, #{resThree,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.aixu.bean.AixuBadReason" >
    insert into aixu_bad_reason
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="desc != null" >
        desc,
      </if>
      <if test="parentid != null" >
        parentid,
      </if>
      <if test="resOne != null" >
        res_one,
      </if>
      <if test="resTwo != null" >
        res_two,
      </if>
      <if test="resThree != null" >
        res_three,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="desc != null" >
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="parentid != null" >
        #{parentid,jdbcType=INTEGER},
      </if>
      <if test="resOne != null" >
        #{resOne,jdbcType=VARCHAR},
      </if>
      <if test="resTwo != null" >
        #{resTwo,jdbcType=VARCHAR},
      </if>
      <if test="resThree != null" >
        #{resThree,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.aixu.bean.AixuBadReasonExample" resultType="java.lang.Integer" >
    select count(*) from aixu_bad_reason
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update aixu_bad_reason
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.desc != null" >
        desc = #{record.desc,jdbcType=VARCHAR},
      </if>
      <if test="record.parentid != null" >
        parentid = #{record.parentid,jdbcType=INTEGER},
      </if>
      <if test="record.resOne != null" >
        res_one = #{record.resOne,jdbcType=VARCHAR},
      </if>
      <if test="record.resTwo != null" >
        res_two = #{record.resTwo,jdbcType=VARCHAR},
      </if>
      <if test="record.resThree != null" >
        res_three = #{record.resThree,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update aixu_bad_reason
    set id = #{record.id,jdbcType=INTEGER},
      desc = #{record.desc,jdbcType=VARCHAR},
      parentid = #{record.parentid,jdbcType=INTEGER},
      res_one = #{record.resOne,jdbcType=VARCHAR},
      res_two = #{record.resTwo,jdbcType=VARCHAR},
      res_three = #{record.resThree,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.aixu.bean.AixuBadReason" >
    update aixu_bad_reason
    <set >
      <if test="desc != null" >
        desc = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="parentid != null" >
        parentid = #{parentid,jdbcType=INTEGER},
      </if>
      <if test="resOne != null" >
        res_one = #{resOne,jdbcType=VARCHAR},
      </if>
      <if test="resTwo != null" >
        res_two = #{resTwo,jdbcType=VARCHAR},
      </if>
      <if test="resThree != null" >
        res_three = #{resThree,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aixu.bean.AixuBadReason" >
    update aixu_bad_reason
    set desc = #{desc,jdbcType=VARCHAR},
      parentid = #{parentid,jdbcType=INTEGER},
      res_one = #{resOne,jdbcType=VARCHAR},
      res_two = #{resTwo,jdbcType=VARCHAR},
      res_three = #{resThree,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectParentNode" resultMap="BaseResultMap">
  	SELECT
  	*
  	FROM aixu_bad_reason
  	WHERE
  	parentid = 0
  </select>
  
  <select id="selectSonNode" parameterType="Integer" resultMap="BaseResultMap">
  	SELECT
  	*
  	FROM aixu_bad_reason
  	WHERE
  	parentid = #{parentId}
  </select>
  
</mapper>